# Instruções para Deploy no Heroku usando Docker

Agora que adaptamos o projeto para usar Docker, você pode fazer deploy no Heroku seguindo estes passos:

## 1. Instale a CLI do Heroku
https://devcenter.heroku.com/articles/heroku-cli

## 2. Login no Heroku
```
heroku login
```

## 3. Configure o Heroku para usar Docker
```
heroku stack:set container -a seu-app-name
```
(substitua "seu-app-name" pelo nome do seu app no Heroku)

## 4. Configure variáveis de ambiente essenciais
```
heroku config:set NODE_ENV=production -a seu-app-name
heroku config:set FOR4PAYMENTS_SECRET_KEY=seu-token-aqui -a seu-app-name
```

## 5. Faça deploy
```
git push heroku main
```

## 6. Verifique os logs
```
heroku logs --tail -a seu-app-name
```

## 7. Configure o domínio
Se você já tem um domínio personalizado configurado, verifique se está funcionando:
```
heroku domains -a seu-app-name
```

---

## Por que o Docker resolve o problema?

O Docker cria um ambiente isolado e controlado onde:

1. A versão do Node.js é exatamente a mesma especificada no Dockerfile (Node 22)
2. Todas as dependências são instaladas corretamente na fase de build
3. O processo de build e execução é padronizado, eliminando inconsistências

Esta solução funciona em qualquer hospedagem que suporte Docker, não apenas no Heroku.

## Alternativa sem Docker

Se preferir não usar Docker, siga as instruções do arquivo `heroku-emergency-fix.txt`.